@use '../../../compiled/scss/tokens';

// Need to reapply system font to form fields because iOS tries to force Helvetica
input,
textarea,
select,
button {
	font-family: var(--font-family-system);
	font-size: var(--size-font-input); // prevent iOS form zoom
}

select {
	width: 100%;
}

label {
	display: block;
}

textarea {
	display: block;
	height: 8em;
	padding: 0.5em;
	resize: vertical;
	width: 100%;
}

//
// Fun Form Layout
//
.fun-form {
	margin-top: var(--size-spacing-double);

	// form row
	.field {
		display: flex;
		flex-direction: column;
		position: relative;

		@media screen and (min-width: tokens.$size-breakpoint-lg) {
			align-items: center;
			flex-flow: row wrap;
		}
	}

	.field + .field {
		margin-top: var(--size-spacing-double);
	}

	// form field label
	label {
		flex: none;
		font-size: 1.125rem;
		font-weight: var(--number-font-weight-bold);
		margin-bottom: var(--size-spacing-half);

		@media screen and (min-width: tokens.$size-breakpoint-lg) {
			flex-basis: 190px; // magic number, just looks right
			margin-bottom: 0;
			margin-right: var(--size-spacing-default);
			text-align: right;
		}
	}

	// form field wrapper
	.field-input {
		flex: 1;
	}

	// form rows that don't need flex layout
	.field-help,
	.field-submit {
		display: block;

		// indent to match label
		@media screen and (min-width: tokens.$size-breakpoint-lg) {
			padding-left: 200px;
		}
	}

	// help text
	.field-help {
		color: var(--color-page-text-secondary);
		font-size: 0.875rem;
		margin-top: var(--size-spacing-half);

		@media screen and (min-width: tokens.$size-breakpoint-lg) {
			flex-basis: 100%; // don't wrap
		}
	}

	//
	// Fun Form Field Styles
	//

	// text-y inputs
	.input-text,
	textarea {
		appearance: none;
		background: var(--color-form-bg);
		border: 1px solid var(--color-border-form);
		border-radius: var(--size-border-radius-large);
		border-width: 4px 1px 1px 4px;
		color: var(--color-page-text);
		display: block;
		font-size: 1.125rem;
		padding: var(--size-spacing-default) var(--size-spacing-half-again);
		width: 100%;
	}

	// checkboxes & radio buttons
	[type='checkbox'],
	[type='radio'] {
		margin-right: 0.5em;
	}

	// field with prefix
	.name-prefix {
		color: var(--color-page-text-secondary);
		margin-right: var(--size-spacing-half);
	}

	// error balloon
	.error {
		background: var(--color-form-error-bubble-bg);
		border-radius: 33% 25px;
		color: var(--color-form-error-bubble-text);
		display: block;
		font-size: 0.75rem;
		padding: 1em 1.25em;
		position: absolute;
		right: calc(var(--size-spacing-half-again) * -1);
		text-align: center;
		top: 25%;
		transform: translateY(-50%);
		width: 115px;
		z-index: 1;

		@media screen and (min-width: tokens.$size-breakpoint-xl) {
			right: -160px;
		}

		&::before {
			background: var(--color-form-error-bubble-bg);
			bottom: calc(50% - 15px);
			content: '';
			display: block;
			height: 22px;
			left: -48px;
			/* stylelint-disable-next-line property-no-vendor-prefix */
			-webkit-mask-image: svg-load('balloons/error-tail.svg');
			mask-image: svg-load('balloons/error-tail.svg');
			position: absolute;
			width: 52px;
		}
	}
}

//
// Stacked Fun Form Modifier
//
.fun-form-stacked {
	.field {
		display: block; // disable flex layout
	}

	label {
		margin-bottom: var(--size-spacing-half);
		margin-right: 0;
		text-align: left;
	}

	.field-help,
	.field-submit {
		padding-left: 0;
	}

	// row with prefix
	/* stylelint-disable selector-max-id */
	#create-shake-name-field,
	.field-prefix {
		display: flex; // re-enable flex layout

		label {
			flex-basis: 100%; // keep the label stacked, but leave the prefix flexible
		}
	}
	/* stylelint-enable */

	.error {
		top: 3em;
	}
}

//
// Fun Form Errors
// List of Errors that usually lives above the form
//
.fun-form-errors {
	color: var(--color-status-danger);
	font-size: 1.125rem;
}
